@model ListOperationsTestApp.Models.OrderViewModel

<div class="jumbotron">
    <div class="panel panel-default">
        <div class="panel-body" id="mainForm">
            @using (Html.BeginForm())
            {
            <div class="row col-md-12 form-group form-inline">
                @Html.LabelFor(model => model.Id, new { @class = "control-label col-md-4" })
                @Html.DisplayFor(m => m.Id, new { @class = "control-label col-md-4" })
            </div>
                <div class="row col-md-12 form-group form-inline">
                    @Html.Label("Name", new { @class = "col-md-3" })
                    @Html.Label("Price, $", new { @class = "col-md-3" })
                    @Html.Label("Number", new { @class = "col-md-3" })
                    @Html.Label("Allowed", new { @class = "col-md-3" })
                </div>
                <div class="row col-md-12 form-group">
                    @for (var i = 0; i < Model.DetailsList.Count; i++)
                    {
                        <div class="form-group">
                            @for (var j = 0; j < Model.DetailsList[i].Count; j++)
                            {
                            <div class="form-inline">
                                <span class="">
                                    @Html.EditorFor(m => m.DetailsList[i][j].Name, new { htmlAttributes = new { @class = "form-control" } })
                                </span>

                                <span class="">
                                    @Html.EditorFor(m => m.DetailsList[i][j].Price, new { htmlAttributes = new { @class = "form-control" } })
                                </span>

                                <span class="">
                                    @Html.EditorFor(m => m.DetailsList[i][j].Number, new { htmlAttributes = new { @class = "form-control" } })
                                </span>

                                <span class="col-md-offset-2">
                                    @{
                                        var checkboxAttributes = Model.DetailsList[i][j].Allowed ?
                                            (object)new { htmlAttributes = new { @class = "checkbox", @checked = "checked" } } :
                                            (object)new { htmlAttributes = new { @class = "checkbox" } };
                                    }
                                    @Html.EditorFor(m => m.DetailsList[i][j].Allowed, checkboxAttributes)
                                </span>
                            </div>
                            }
                        </div>
                    }
                </div>
                <div class="row col-md-12 form-group form-inline">
                    @Html.LabelFor(model => model.TotalCost, new { @class = "control-label col-md-4" })
                    @Html.DisplayFor(m => m.TotalCost, new { @class = "control-label col-md-4" })$
                </div>
                <div class="">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
</div>
